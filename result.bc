; ModuleID = "generated"
target triple = "x86_64-unknown-linux-gnu"
target datalayout = ""

define i64 @"main"() 
{
entry:
  %"n" = alloca i64
  %"i" = alloca i64
  %"j" = alloca i64
  store i64 5, i64* %"n"
  %"a[5]" = alloca i64
  %"a[0]" = alloca i64
  %"a[1]" = alloca i64
  %"a[2]" = alloca i64
  %"a[3]" = alloca i64
  %"a[4]" = alloca i64
  store i64 1, i64* %"a[0]"
  store i64 2, i64* %"a[1]"
  store i64 3, i64* %"a[2]"
  store i64 4, i64* %"a[3]"
  store i64 6, i64* %"a[4]"
  store i64 0, i64* %"i"
entry.forcondition:
  %".11" = load i64, i64* %"i"
  %".12" = load i64, i64* %"n"
  %".13" = icmp slt i64 %".11", %".12"
  %".14" = zext i1 %".13" to i64
  %".15" = sub i64 %".14", 1
  %".16" = load i64, i64* %"i"
  %".17" = load i64, i64* %"n"
  %".18" = icmp slt i64 %".16", %".17"
  %".19" = zext i1 %".18" to i64
  %".20" = sub i64 %".19", 1
  %"forcond" = icmp ne i64 %".20", 0
  br i1 %"forcond", label %"entry.for", label %"entry.endfor"
entry.forincrement:
  %".21" = load i64, i64* %"i"
  %".22" = add i64 %".21", 1
  store i64 %".22", i64* %"i"
  br label %"entry.forcondition"
entry.for:
  store i64 0, i64* %"j"
  br label %"entry.forincrement"
entry.endfor:
  ret i64 0
entry.for.forcondition:
  %".27" = load i64, i64* %"j"
  %".28" = load i64, i64* %"n"
  %".29" = icmp slt i64 %".27", %".28"
  %".30" = zext i1 %".29" to i64
  %".31" = load i64, i64* %"i"
  %".32" = sub i64 %".31", 1
  %".33" = sub i64 %".30", %".32"
  %".34" = load i64, i64* %"j"
  %".35" = load i64, i64* %"n"
  %".36" = icmp slt i64 %".34", %".35"
  %".37" = zext i1 %".36" to i64
  %".38" = load i64, i64* %"i"
  %".39" = sub i64 %".38", 1
  %".40" = sub i64 %".37", %".39"
  %"forcond.1" = icmp ne i64 %".40", 0
  br i1 %"forcond", label %"entry.for.for", label %"entry.for.endfor"
entry.for.forincrement:
  %".41" = load i64, i64* %"j"
  %".42" = add i64 %".41", 1
  store i64 %".42", i64* %"j"
  br label %"entry.for.forcondition"
entry.for.for:
  %"j1" = alloca i64
  %".44" = load i64, i64* %"j"
  %".45" = add i64 %".44", 1
  store i64 %".45", i64* %"j1"
  %".47" = load i64, i64* %"a[0]"
  %".48" = load i64, i64* %"a[1]"
  %".49" = icmp sgt i64 %".47", %".48"
  %".50" = zext i1 %".49" to i64
  %".51" = load i64, i64* %"a[0]"
  %".52" = load i64, i64* %"a[1]"
  %".53" = icmp sgt i64 %".51", %".52"
  %".54" = zext i1 %".53" to i64
  %".55" = icmp ne i64 %".54", 0
  br i1 %".55", label %"entry.for.for.if", label %"entry.for.for.endif"
  br label %"entry.for.forincrement"
entry.for.endfor:
  br label %"entry.endfor"
entry.for.for.if:
  %"tmp" = alloca i64
  %".57" = load i64, i64* %"a[0]"
  store i64 %".57", i64* %"tmp"
  %".59" = load i64, i64* %"a[1]"
  store i64 %".59", i64* %"a[0]"
  %".61" = load i64, i64* %"tmp"
  store i64 %".61", i64* %"a[1]"
  br label %"entry.for.for.endif"
entry.for.for.endif:
  br label %"entry.for.endfor"
}
